server {
    listen 80;

    location = /pub {
        nchan_publisher;
        nchan_authorize_request /publisher-authentication;
        nchan_channel_id $arg_id;
        nchan_redis_pass redis_backend;
        nchan_message_buffer_length 100;
        nchan_message_timeout 10;
        nchan_store_messages on;
    }

    location = /sub {
        nchan_subscriber;
        nchan_channel_id $arg_id;
        nchan_redis_pass redis_backend;
        nchan_message_buffer_length 100;
        nchan_message_timeout 10;
        nchan_store_messages on;
    }

    location /status {
        nchan_stub_status;
    }

    location = /publisher-authentication {
        # This is done for simplicity. In a real environment, we should not hardcode the credentials here.
        # Translates to "Basic user:password"
        if ($http_authorization = "Basic dXNlcjpwYXNzd29yZA==") {
            return 200 '';
        }

        return 403;

        # We can also call php for authentication.
        #proxy_pass http://nginx/nchan-authentication;
        #proxy_pass_request_body off;
        #proxy_set_header Content-Length "";
        #proxy_set_header X-Subscriber-Type $nchan_subscriber_type;
        #proxy_set_header X-Publisher-Type $nchan_publisher_type;
        #proxy_set_header X-Prev-Message-Id $nchan_prev_message_id;
        #proxy_set_header X-Channel-Id $nchan_channel_id;
        #proxy_set_header X-Original-URI $request_uri;
        #proxy_set_header X-Forwarded-For $remote_addr;
    }

    error_log /dev/stdout;
    access_log /dev/stdout;
}

upstream redis_backend {
    nchan_redis_server redis://redis:6379;
}
