#!/usr/bin/env bash

help() {
    echo
    echo ------------------
    echo Available commands
    echo ------------------
    echo build
    echo Build the environment for development.
    echo
    echo up
    echo Shorthand to start an already built project.
    echo
    echo down
    echo Shorthand to down a started project.
    echo
    echo assets
    echo Build assets for the browser and watch for changes.
    echo
    echo tests
    echo Run phpunit, phpcs, phpstan and codeception.
    echo
    echo phpunit
    echo Run phpunit.
    echo
    echo phpcs
    echo Run phpcs.
    echo
    echo phpstan
    echo Run phpstan.
    echo
    echo codeception
    echo Run codeception.
    echo
    echo buildProductionImages
    echo Build the production images.
    echo
    echo pushProductionImages
    echo Push the production images to DockerHub.
    echo
}

build() {
    docker-compose down --volumes
    docker-compose build --pull
    docker-compose up -d composer
    docker cp "$(docker-compose ps -q composer)":/project/vendor code/vendor
    docker-compose up --remove-orphan
}

up() {
    docker-compose up
}

down() {
    docker-compose down
}

assets() {
    docker-compose run frontend-builder watch -n 1 make
}

tests() {
    phpunit
    phpcs
    phpstan
    codeception
}

phpunit() {
    docker-compose run php vendor/bin/phpunit --coverage-text
}

phpcs() {
    docker-compose run php vendor/bin/phpcs src tests/unit --standard=PSR2 -v
}

phpstan() {
    docker-compose run php vendor/bin/phpstan analyse -l 2 src
}

codeception() {
    buildProductionImages

    docker-compose -f docker-compose.ci.yml -p php-gambling-website-ci up -d
    docker-compose -f docker-compose.ci.yml -p php-gambling-website-ci run -v $(pwd)/code/tests:/project/tests php bin/waitForIt php-fpm:9000 --timeout=120 -- vendor/bin/codecept run
    docker-compose -f docker-compose.ci.yml -p php-gambling-website-ci down -v
}

buildProductionImages() {
    docker build --build-arg environment=production --file container/php-fpm/Dockerfile --tag marein/php-gambling-website:php-fpm .
    docker build --file container/traefik/Dockerfile --tag marein/php-gambling-website:traefik .
    docker build --file container/nginx/Dockerfile --tag marein/php-gambling-website:nginx .
    docker build --file container/nchan/Dockerfile --tag marein/php-gambling-website:nchan .
    docker build --file container/mysql/Dockerfile --tag marein/php-gambling-website:mysql .
    docker build --file container/redis/Dockerfile --tag marein/php-gambling-website:redis .
    docker build --file container/rabbit-mq/Dockerfile  --tag marein/php-gambling-website:rabbit-mq .
}

pushProductionImages() {
    echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

    docker push marein/php-gambling-website:php-fpm
    docker push marein/php-gambling-website:traefik
    docker push marein/php-gambling-website:nginx
    docker push marein/php-gambling-website:nchan
    docker push marein/php-gambling-website:mysql
    docker push marein/php-gambling-website:redis
    docker push marein/php-gambling-website:rabbit-mq
}

if [ "$*" = "" ]
then
    help
else
    $*
fi
